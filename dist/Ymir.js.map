{"version":3,"sources":["Ymir.ts"],"names":[],"mappings":";;AAAA,2CAAwC;AAExC,MAAa,IAAI;IASb,YAAY,OAAa;QARlB,WAAM,GAAqB,EAAE,CAAC;QASjC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IAEM,IAAI,CAAC,GAAW,EAAE,UAAe,IAAI,CAAC,OAAO;QAChD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAEnD,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,KAAK,GAAG,IAAI,qBAAS,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3B;QAED,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,GAAW;QAErB,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAE5D,IAAI,SAAS,KAAK,CAAC,CAAC;YAAE,OAAO;QAE7B,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAElC,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAEM,GAAG,CAAC,GAAW;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IAClD,CAAC;IAEM,QAAQ,CAAC,GAAW;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACzB,OAAO,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC;IAC/C,CAAC;IAEM,IAAI,CAAC,GAAW;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAElD,IAAI,IAAI,KAAK,SAAS,EAAE;YACpB,IAAI,GAAG,IAAI,qBAAS,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;QAED,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEM,eAAe,CAAC,GAAW,EAAE,SAAc;QAC9C,IAAI,MAAW,CAAC;QAChB,OAAO,IAAI;aACN,IAAI,CAAC,GAAG,CAAC;aACT,IAAI,CAAC,KAAK,IAAI,EAAE;YACb,MAAM,GAAG,MAAM,SAAS,EAAE,CAAC;QAC/B,CAAC,CAAC;aACD,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC5B,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;;AA9Da,mBAAc,GAAG;IAC3B,SAAS,EAAG,CAAC;CAChB,CAAC;AALN,oBAkEC","file":"Ymir.js","sourcesContent":["import { SpaceLock } from './SpaceLock';\n\nexport class Ymir {\n    public locked: Array<SpaceLock> = [];\n\n    public static defaultOptions = {\n        spaceSize : 1,\n    };\n\n    public options: any;\n\n    constructor(options?: any) {\n        this.options = Object.assign({}, Ymir.defaultOptions, options);\n    }\n\n    public lock(key: string, options: any = this.options): SpaceLock {\n        let _lock = this.locked.find((x) => x.key === key);\n\n        if (_lock === undefined) {\n            _lock = new SpaceLock(key, options);\n            this.locked.push(_lock);\n        }\n\n        _lock.lock();\n        return _lock;\n    }\n\n    public unlock(key: string) {\n\n        let lockIndex = this.locked.findIndex((x) => x.key === key);\n\n        if (lockIndex === -1) return;\n\n        let lock = this.locked[lockIndex];\n\n        lock.unlock();\n    }\n\n    public get(key: string) {\n        return this.locked.find((x) => x.key === key);\n    }\n\n    public isLocked(key: string) {\n        let lock = this.get(key);\n        return lock !== undefined && lock.isLocked;\n    }\n\n    public wait(key: string): Promise<void> {\n        let lock = this.locked.find((x) => x.key === key);\n\n        if (lock === undefined) {\n            lock = new SpaceLock(key, this.options);\n            this.locked.push(lock);\n        }\n\n        return lock.wait();\n    }\n\n    public waitAndLockOnce(key: string, function1: any): Promise<any> {\n        let result: any;\n        return this\n            .wait(key)\n            .then(async () => {\n                result = await function1();\n            })\n            .then(() => this.unlock(key))\n            .then(() => result);\n    }\n}\n"]}