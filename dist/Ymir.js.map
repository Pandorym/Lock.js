{"version":3,"sources":["Ymir.ts"],"names":[],"mappings":";;AAAA,2CAAwC;AAGxC,MAAa,IAAI;IAUb,YAAY,OAAa;QATlB,eAAU,GAAqB,EAAE,CAAC;QAUrC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IAEM,YAAY,CAAC,GAAW,EAAE,mBAAwB,IAAI,CAAC,OAAO;QACjE,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAE3D,IAAI,SAAS,KAAK,SAAS,EAAE;YACzB,SAAS,GAAG,IAAI,qBAAS,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;YACjD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACnC;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAEM,OAAO,CAAC,GAAW;QACtB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,SAAS,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAEM,QAAQ,CAAC,GAAW;QACvB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAEvC,SAAS,CAAC,QAAQ,EAAE,CAAC;IACzB,CAAC;IAEM,MAAM,CAAC,GAAW,EAAE,IAAS,EAAE,UAAkB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAiB;QAC3F,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAEM,mBAAmB,CAAC,GAAW,EAAE,IAAS,EAAE,UAAkB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAwB,IAAI;QACnH,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,SAAS,CAAC,mBAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;IACvE,CAAC;IAEI,eAAe,CAAC,GAAW,EAAE,IAAS,EAAE,QAAe;QAC5D,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,SAAS,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEQ,QAAQ,CAAC,GAAW;QACvB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,SAAS,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAEM,MAAM,CAAC,GAAW;QACrB,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,SAAS,CAAC,MAAM,CAAC;IAC5B,CAAC;;AAxDa,mBAAc,GAA2C;IACnE,SAAS,EAAG,CAAC;IACb,OAAO,EAAG,IAAI;CACjB,CAAC;AANN,oBA4DC","file":"Ymir.js","sourcesContent":["import { SpaceLock } from './SpaceLock';\nimport {Task} from \"./Task\";\n\nexport class Ymir {\n    public spaceLocks: Array<SpaceLock> = [];\n\n    public static defaultOptions: { spaceSize: number, timeout: number } = {\n        spaceSize : 1,\n        timeout : null,\n    };\n\n    public options: any;\n\n    constructor(options?: any) {\n        this.options = Object.assign({}, Ymir.defaultOptions, options);\n    }\n\n    public getSpaceLock(key: string, spaceLockOptions: any = this.options): SpaceLock {\n        let spaceLock = this.spaceLocks.find((x) => x.key === key);\n\n        if (spaceLock === undefined) {\n            spaceLock = new SpaceLock(key, spaceLockOptions);\n            this.spaceLocks.push(spaceLock);\n        }\n\n        return spaceLock;\n    }\n\n    public checkIn(key: string) {\n        let spaceLock = this.getSpaceLock(key);\n        return spaceLock.checkIn();\n    }\n\n    public checkOut(key: string) {\n        let spaceLock = this.getSpaceLock(key);\n\n        spaceLock.checkOut();\n    }\n\n    public doOnce(key: string, func: any, timeout: number = this.options.timeout, task_key? :string) {\n        let spaceLock = this.getSpaceLock(key);\n        return spaceLock.doOnce(func, timeout, task_key);\n    }\n\n    public doOnce_untilOneDone(key: string, func: any, timeout: number = this.options.timeout, tryTimesLimit: number = null) {\n        let spaceLock = this.getSpaceLock(key);\n        return spaceLock.doOnce_untilOneDone(func, timeout, tryTimesLimit);\n    }\n\n  public needOneCheckout(key: string, func: any, task_key ?: any) : Promise<Task>{\n    let spaceLock = this.getSpaceLock(key);\n    return spaceLock.needOneCheckout(func, task_key);\n  }\n\n    public isLocked(key: string) {\n        let spaceLock = this.getSpaceLock(key);\n        return spaceLock.isLocked;\n    }\n\n    public isFull(key: string) {\n        let spaceLock = this.getSpaceLock(key);\n        return spaceLock.isFull;\n    }\n}\n"]}