{"version":3,"sources":["Locks.ts"],"names":[],"mappings":";;AAAA,iCAA8B;AAE9B,MAAa,KAAK;IAGd;QAFO,WAAM,GAAgB,EAAE,CAAC;IAGhC,CAAC;IAEM,IAAI,CAAC,GAAW;QACnB,IAAI,KAAK,GAAG,IAAI,WAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAExB,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,GAAW;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;IACpD,CAAC;IAEM,IAAI,CAAC,GAAW;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IACzD,CAAC;CACJ;AArBD,sBAqBC","file":"Locks.js","sourcesContent":["import { Lock } from './Lock';\n\nexport class Locks {\n    public locked: Array<Lock> = [];\n\n    constructor() {\n    }\n\n    public lock(key: string): Lock {\n        let _lock = new Lock(key);\n        _lock.lock();\n        this.locked.push(_lock);\n\n        return _lock;\n    }\n\n    public unlock(key: string) {\n        this.locked.find((x) => x.key === key).unlock();\n    }\n\n    public wait(key: string): Promise<void> {\n        return this.locked.find((x) => x.key === key).wait();\n    }\n}\n"]}