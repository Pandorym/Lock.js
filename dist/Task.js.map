{"version":3,"sources":["Task.ts"],"names":[],"mappings":";;AAAA,uCAAmC;AAEnC,MAAa,IAAI;IAMb,IAAW,IAAI,CAAC,GAAQ;QACpB,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE;YACd,OAAO,kBAAO,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,kBAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;oBACxD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC/B,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC;IACN,CAAC;IAMD,YAAY,GAAW,EAAE,SAAe;QACpC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG,IAAI,kBAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACzC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,KAAK,SAAS,EAAE;YACzB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;SACzB;IACL,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEM,QAAQ;QACX,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;IAC1B,CAAC;IAAA,CAAC;IAEK,MAAM,CAAC,GAAG,GAAU;QACvB,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;YACjC,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC,CAAC;SAC7B;IACL,CAAC;IAEM,IAAI;QACP,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YAC1B,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;SACvB;IACL,CAAC;CACJ;AApDD,oBAoDC","file":"Task.js","sourcesContent":["import { Promise } from 'bluebird';\n\nexport class Task {\n    public key: string;\n    public status: 'wait' | 'inside' | 'leave';\n\n    private _func_cancel: any;\n    private _func: any;\n    public set func(val: any) {\n        this._func = () => {\n            return Promise.race([val(), new Promise((resolve, reject) => {\n                this._func_cancel = reject;\n            })]);\n        };\n    }\n\n    public token: Promise<void>;\n    private _token_resolve: any;\n    private _token_reject: any;\n\n    constructor(key: string, func_task?: any) {\n        this.key = key;\n        this.status = 'wait';\n\n        this.token = new Promise((resolve, reject) => {\n            this._token_resolve = resolve;\n            this._token_reject = reject;\n        });\n\n        if (func_task !== undefined) {\n            this.func = func_task;\n        }\n    }\n\n    public checkIn() {\n        this.status = 'inside';\n        this._token_resolve();\n    }\n\n    public checkOut() {\n        this.status = 'leave';\n    };\n\n    public cancel(...arg: any[]) {\n        if (this._func_cancel !== undefined) {\n            this._func_cancel(...arg);\n        }\n    }\n\n    public exec() {\n        if (this._func !== undefined) {\n            return this._func();\n        }\n    }\n}\n"]}